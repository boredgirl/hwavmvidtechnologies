@namespace Oqtane.ChatHubs
@inherits ModuleBase
@implements IDisposable 

@inject NavigationManager NavigationManager
@inject ChatHubService ChatHubService
@inject BlazorPagerService<ChatHubIgnoredBy> BlazorPagerServiceChatHubIgnoredBy

@using System.Linq
@using Oqtane.ChatHubs.Services
@using Oqtane.ChatHubs.Extensions
@using Oqtane.ChatHubs.Models
@using BlazorPager
@using Oqtane.ChatHubs.Constants
@using Microsoft.AspNetCore.SignalR.Client

@if (ChatHubService.Connection != null && ChatHubService.Connection.State == HubConnectionState.Connected)
{

    var getItemsApiUrl = string.Concat(NavigationManager.BaseUri.Substring(0, NavigationManager.BaseUri.LastIndexOf('/')), ChatHubService.ChatHubControllerApiUrl, "/GetIgnoredByItems");

    <h5><span class="oi oi-bug"></span> Ignored by users list <span class="badge bg-success">NEW</span></h5>

    <BlazorPagerComponent ApiQueryId="@ModuleState.ModuleId" HubConnectionId="@ChatHubService.Connection.ConnectionId" ElementId="WasmBlazorPagerIgnoredByItems" GetItemsApiUrl="@getItemsApiUrl" ContextPageItems="@ChatHubService.IgnoredByUsers" Context="context" ItemsPerPage="@ChatHubConstants.IgnoredByItems" TItemGeneric="@ChatHubIgnoredBy" Class="py-sm-3" Scrolling="@false">
        <BlazorPagerItem>

            <div class="d-flex" style="background-color: lightgoldenrodyellow; border-bottom: 1px solid #f1f1f1;">
                <div class="flex-fill">
                    <button type="button" class="btn btn-sm btn-link">@context.User.DisplayName</button>
                </div>
            </div>

        </BlazorPagerItem>
    </BlazorPagerComponent>

}

@code {

    protected override async Task OnInitializedAsync()
    {
        this.BlazorPagerServiceChatHubIgnoredBy.OnRetrievedItems += RetrievedItems;
        this.BlazorPagerServiceChatHubIgnoredBy.OnError += Error;
        await base.OnInitializedAsync();
    }

    public void RetrievedItems(List<ChatHubIgnoredBy> obj, int apiQueryId)
    {
        if (apiQueryId == ModuleState.ModuleId)
        {
            this.ChatHubService.IgnoredByUsers.AddRange(obj);
            this.ChatHubService.RunUpdateUI();
        }
    }

    public void Error(Exception exception, int apiQueryId)
    {
        if (ModuleState.ModuleId == apiQueryId)
        {
            this.ChatHubService.HandleException(exception);
        }
    }

    public void Dispose()
    {
        this.BlazorPagerServiceChatHubIgnoredBy.OnRetrievedItems -= RetrievedItems;
        this.BlazorPagerServiceChatHubIgnoredBy.OnError -= Error;
    }

}
