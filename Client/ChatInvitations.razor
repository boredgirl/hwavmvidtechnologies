@namespace Oqtane.ChatHubs
@inherits ModuleBase
@implements IDisposable 

@inject NavigationManager NavigationManager
@inject ChatHubService ChatHubService
@inject PagerService<ChatHubInvitation> PagerServiceChatHubInvitation

@using System.Linq
@using Oqtane.ChatHubs.Services
@using Oqtane.ChatHubs.Extensions
@using Oqtane.ChatHubs.Models
@using Hwavmvid.Pager
@using Oqtane.ChatHubs.Constants
@using Microsoft.AspNetCore.SignalR.Client

@if (ChatHubService.Connection != null && ChatHubService.Connection.State == HubConnectionState.Connected)
{

    var getItemsApiUrl = string.Concat(NavigationManager.BaseUri.Substring(0, NavigationManager.BaseUri.LastIndexOf('/')), ChatHubService.ChatHubControllerApiUrl, "/GetInvitationItems");

    <h5><span class="oi oi-list"></span> All Invitations <span class="badge bg-success">NEW</span></h5>

    <PagerComponent ApiQueryId="@ModuleState.ModuleId" HubConnectionId="@ChatHubService.Connection.ConnectionId" ElementId="WasmHwavmvid.PagerInvitationItems" GetItemsApiUrl="@getItemsApiUrl" ContextPageItems="@ChatHubService.Invitations" Context="context" ItemsPerPage="@ChatHubConstants.InvitationItems" TItemGeneric="@ChatHubInvitation" Class="py-sm-3" Scrolling="@false">
        <PagerItem>

            <div class="d-flex" style="background-color: lightgoldenrodyellow; border-bottom: 1px solid #f1f1f1;">
                <div class="flex-fill">
                    <button type="button" @onclick="@(async () => await ChatHubService.FollowInvitation_Clicked(context.Id, context.RoomId))" class="btn btn-sm btn-link">@context.Hostname</button>
                </div>
                <div class="flex-fill text-start">
                    <button type="button" @onclick="@(() => PagerServiceChatHubInvitation.RemoveItem(context, ModuleState.ModuleId))" class="btn btn-sm btn-danger">
                        <span aria-hidden="true" style="font-size: 1.4rem; line-height: 0;">&times;</span> Remove Invitation
                    </button>
                </div>
            </div>

        </PagerItem>
    </PagerComponent>

}

@code {

    protected override async Task OnInitializedAsync()
    {
        this.PagerServiceChatHubInvitation.OnRetrievedItems += RetrievedItems;
        this.PagerServiceChatHubInvitation.OnRemoveItem += RemoveItem;
        this.PagerServiceChatHubInvitation.OnError += OnPagerInvitationError;
        await base.OnInitializedAsync();
    }

    public void RetrievedItems(List<ChatHubInvitation> items, int apiQueryId)
    {
        if (apiQueryId == ModuleState.ModuleId)
        {
            this.ChatHubService.Invitations.AddRange(items);
            this.ChatHubService.RunUpdateUI();
        }
    }
    public async void RemoveItem(PagerEvent<ChatHubInvitation> obj)
    {
        if (obj.ApiQueryId == ModuleState.ModuleId)
        {
            await this.ChatHubService.RemoveInvitation(obj.Item);
            this.ChatHubService.Invitations.Remove(obj.Item);
            this.ChatHubService.RunUpdateUI();
        }
    }

    public void OnPagerInvitationError(Exception exception, int apiQueryId)
    {
        if (ModuleState.ModuleId == apiQueryId)
        {
            this.ChatHubService.HandleException(exception);
        }
    }

    public void Dispose()
    {
        this.PagerServiceChatHubInvitation.OnRetrievedItems -= RetrievedItems;
        this.PagerServiceChatHubInvitation.OnRemoveItem -= RemoveItem;
        this.PagerServiceChatHubInvitation.OnError -= OnPagerInvitationError;
    }

}
